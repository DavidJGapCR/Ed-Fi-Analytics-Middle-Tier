name: PostgreSQL Service Example
on: push

env:
  BUILD_VERSION: "2.6.1"
  CONFIGURATION: "Release"
  GA_USE_GITHUB_ENV: "true"
  USE_MSSQL_DEFAULT_CONN_STRING: "FALSE"
  USE_POSTGRES_DEFAULT_CONN_STRING: "FALSE"
  SQLSERVER_SERVER: "localhost"
  SQLSERVER_SA_PASS: ${{ secrets.MSSQL_SA_PWD }}
  SQLSERVER_DATABASE_DS2: "AnalyticsMiddleTier_Testing_Ds2"
  SQLSERVER_DATABASE_DS31: "AnalyticsMiddleTier_Testing_Ds31"
  SQLSERVER_DATABASE_DS32: "AnalyticsMiddleTier_Testing_Ds32"
  SQLSERVER_INTEGRATED_SECURITY: "false"
  SQLSERVER_USER: ${{ secrets.MSSQL_USER }}
  SQLSERVER_PASS: ${{ secrets.MSSQL_PWD }}
  POSTGRES_HOST: "localhost"
  POSTGRES_DATABASE: "edfi_ods_tests"
  POSTGRES_PORT: "5432"
  POSTGRES_USER: ${{ secrets.POSTGRESQL_USER }}
  POSTGRES_PASS: ${{ secrets.POSTGRESQL_PWD }}
  POSTGRES_POOLING: "false"

jobs:
  # Label of the runner job
  runner-job:
    # You must use a Linux environment when using service containers or container jobs
    runs-on: ubuntu-latest

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:11
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - name: Start windows container for SQLServer 2017 Express
        run: |
         docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=${{ env.SQLSERVER_SA_PASS }}" -e "MSSQL_PID=Express" -p 1433:1433 -d mcr.microsoft.com/mssql/server:2017-latest       
         
      
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Caching packages
        uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
    
      - name: Building AMT
        run: |
          .\build.ps1 build -Configuration ${{ env.CONFIGURATION }} -Version ${{ env.BUILD_VERSION }} -BuildCounter ${{ github.run_number }}
        shell: pwsh

      #  - name: Unit Tests
      #    run: |
      #      .\build.ps1 unittest -Configuration ${{ env.CONFIGURATION }}
      #    shell: pwsh
      
      - name: Create Postgres DB
        run: |
          .\eng\CreateTestDbAndSchema.ps1
        shell: pwsh
        env:
          PGPASSWORD: postgres

      - name: Integration Tests
        run: |
          .\build.ps1 integrationtest -Configuration ${{ env.CONFIGURATION }}
        shell: pwsh
